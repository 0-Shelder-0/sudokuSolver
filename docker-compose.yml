version: "3.9"
services:
  webapi_1:
    build: webapi/.
    depends_on:
      - db
    links:
      - db
    environment:
      NAME: webapi_1
      RABBITMQ_URL: amqp://user:passwd@rabbit:5672/%2F
      DATABASE_URL: postgresql://postgres:root@db/sudoku
      API_TOKEN: e&Itqej9-71H5z?4K&b8>v]v[}s]+[F^h2WcQn!;M3^YlDph&bdOnV(JE![XP2w

  webapi_2:
    build: webapi/.
    depends_on:
      - db
    links:
      - db
    environment:
      NAME: webapi_2
      RABBITMQ_URL: amqp://user:passwd@rabbit:5672/%2F
      DATABASE_URL: postgresql://postgres:root@db/sudoku
      API_TOKEN: e&Itqej9-71H5z?4K&b8>v]v[}s]+[F^h2WcQn!;M3^YlDph&bdOnV(JE![XP2w

  solver:
    build: solver/.
    restart: on-failure
    depends_on:
      - rabbit
      - nginx
    links:
      - rabbit
      - nginx
    environment:
      RABBITMQ_URL: amqp://user:passwd@rabbit:5672/%2F
      WEB_API_BASE_URL: http://nginx:80
      API_TOKEN: e&Itqej9-71H5z?4K&b8>v]v[}s]+[F^h2WcQn!;M3^YlDph&bdOnV(JE![XP2w

  rabbit:
    image: rabbitmq:management
    hostname: rabbit
    ports:
      - "15671:15671"
      - "15672:15672"
      - "5671:5671"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: passwd
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 10

  nginx:
    build: nginx/.
    ports:
      - "8080:80"
    depends_on:
      - webapi_1
      - webapi_2
    links:
      - webapi_1
      - webapi_2

  db:
    image: postgres
    restart: always
    ports:
      - "15432:5432"
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: sudoku
    volumes:
      - "dbdata:/var/lib/postgresql/data"

volumes:
  dbdata: